* {
  box-sizing: border-box;
}

html {
  line-height: 1.6;
}

body {
  margin: 0;
  font-family: sans-serif;
  background: $content-background-color;
  color: $text-color;
}

h1, h2, h3, h4, h5, h6 {
  color: $primary-color;
}

a {
  transition: color 0.35s;
  text-decoration: none;
  line-height: 1.1;
  display: inline-block;
  color: $link-color;
}
a:after {
  display: block;
  content: "";
  height: 1px;
  width: 0%;
  background-color: $link-color;
  -webkit-transition: width 0.5s ease;
  -moz-transition: width 0.5s ease;
  -ms-transition: width 0.5s ease;
  transition: width 0.5s ease;
}
a, a:hover, a:focus {
  text-decoration: none;
  outline: 0;
}
a:hover:after, a:focus:after {
  width: 100%;
}

hr {
  border:1px;
  border-style: solid;
  color: $text-color;
  opacity: 0.5;
}

// Browsers seem to use a smaller default font-size with monospaced code
// blocks (like 80% of the size of normal text) and that looks pretty bad with
// small inline code-blocks in the middle of normal text (mainly because of
// the very noticeable difference in x-height). This CSS corrects that problem.
code {
  font-family: monospace,monospace;
  font-size: 1em;
  color: rgba($text-color, .8);
}

pre {
  font-size: 1rem;
  line-height: 1.2em;
  margin: 0;
  overflow: auto;

  // A larger monospaced block of text (that isn't mixed with normal text)
  // generally looks heavier than normal text with the same font size. For this
  // reason using a smaller monospaced font size makes sense in this situation.
  code {
    font-size: .8em;
  }
}

::selection {
  background: rgba($text-color, .25);
}
::-moz-selection {
  background: rgba($text-color, .25);
}

code.has-jax {
  -webkit-font-smoothing: antialiased;
  background: inherit !important;
  border: none !important;
  font-size: 100%;
}